{"version":3,"sources":["images/blue-candy.png","images/green-candy.png","images/orange-candy.png","images/purple-candy.png","images/red-candy.png","images/yellow-candy.png","images/blank.png","music/gameMusic.mp3","music/dragCandyMusic.mp3","music/matchCandyMusic.mp3","App.js","index.js"],"names":["gameMusic","Audio","gameMusicPlay","dragCandyMusic","dragCandyMusicPlay","matchCandyMusic","matchCandyMusicPlay","candyColors","blueCandy","orangeCandy","purpleCandy","redCandy","yellowCandy","greenCandy","App","useState","currentColorArrangement","setCurrentColorArrangement","squareBeingDraged","setSquareBeingDraged","squareBeingReplaced","setSquareBeingReplaced","scoreDisplay","setScoreDisplay","checkForColumnOfFour","i","columnOfFour","width","decidedColor","isBlank","blank","every","square","forEach","score","checkForColumnOfThree","columnOfThree","checkForRowOfFour","rowOfFour","checkForRowOfThree","rowOfThree","moveIntoSquareBelow","Math","floor","random","length","dragStart","e","play","setTimeout","pause","target","dragDrop","dragEnd","squareBeingDragedId","parseInt","getAttribute","squareBeingReplacedId","validMove","includes","useEffect","timer","setInterval","clearInterval","randomColorArrangement","createBoard","className","map","candyColor","index","src","draggable","onDragStart","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","onDragEnd","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86d47a94.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/blue-candy.73120c15.png\";","export default __webpack_public_path__ + \"static/media/green-candy.599f7016.png\";","export default __webpack_public_path__ + \"static/media/orange-candy.f106b2cd.png\";","export default __webpack_public_path__ + \"static/media/purple-candy.ae25b8a5.png\";","export default __webpack_public_path__ + \"static/media/red-candy.3658b37c.png\";","export default __webpack_public_path__ + \"static/media/yellow-candy.a3d87a9b.png\";","export default __webpack_public_path__ + \"static/media/blank.fbcb9179.png\";","export default __webpack_public_path__ + \"static/media/gameMusic.4c006e01.mp3\";","export default __webpack_public_path__ + \"static/media/dragCandyMusic.57ff3f2f.mp3\";","export default __webpack_public_path__ + \"static/media/matchCandyMusic.dc274ab1.mp3\";","import { useState, useEffect } from 'react'\nimport blueCandy from './images/blue-candy.png'\nimport greenCandy from './images/green-candy.png'\nimport orangeCandy from './images/orange-candy.png'\nimport purpleCandy from './images/purple-candy.png'\nimport redCandy from './images/red-candy.png'\nimport yellowCandy from './images/yellow-candy.png'\nimport blank from './images/blank.png'\nimport gameMusicPlay from './music/gameMusic.mp3'\nimport dragCandyMusicPlay from './music/dragCandyMusic.mp3'\nimport matchCandyMusicPlay from './music/matchCandyMusic.mp3'\nimport './App.css'\n\nlet gameMusic = new Audio(gameMusicPlay);\nlet dragCandyMusic = new Audio(dragCandyMusicPlay);\nlet matchCandyMusic = new Audio(matchCandyMusicPlay);\n\nconst width = 8;\nconst candyColors = [\n  blueCandy,\n  orangeCandy,\n  purpleCandy,\n  redCandy,\n  yellowCandy,\n  greenCandy\n];\nconst App = () => {\n  const [currentColorArrangement, setCurrentColorArrangement] = useState([]);\n  const [squareBeingDraged, setSquareBeingDraged] = useState(null);\n  const [squareBeingReplaced, setSquareBeingReplaced] = useState(null);\n  const [scoreDisplay, setScoreDisplay] = useState(0);\n\n  const checkForColumnOfFour = () => {\n    for (let i = 0; i <= 39; i++) {\n      const columnOfFour = [i, i + width, i + width * 2, i + width * 3];\n      const decidedColor = currentColorArrangement[i];\n      const isBlank = currentColorArrangement[i] === blank;\n\n      if (columnOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n        columnOfFour.forEach(square => currentColorArrangement[square] = blank);\n        setScoreDisplay((score) => score + 4);\n        return true;\n      }\n    }\n  }\n\n  const checkForColumnOfThree = () => {\n    for (let i = 0; i <= 47; i++) {\n      const columnOfThree = [i, i + width, i + width * 2];\n      const decidedColor = currentColorArrangement[i];\n      const isBlank = currentColorArrangement[i] === blank;\n\n      if (columnOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n        columnOfThree.forEach(square => currentColorArrangement[square] = blank);\n        setScoreDisplay((score) => score + 3);\n        return true;\n      }\n    }\n  }\n\n  const checkForRowOfFour = () => {\n    for (let i = 0; i < 64; i++) {\n      if (i % width > 4)\n        continue;\n\n      const rowOfFour = [i, i + 1, i + 2, i + 3];\n      const decidedColor = currentColorArrangement[i];\n      const isBlank = currentColorArrangement[i] === blank;\n\n      if (rowOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n        rowOfFour.forEach(square => currentColorArrangement[square] = blank);\n        setScoreDisplay((score) => score + 4);\n        return true;\n      }\n    }\n  }\n\n  const checkForRowOfThree = () => {\n    for (let i = 0; i < 64; i++) {\n      if (i % width > 5)\n        continue;\n\n      const rowOfThree = [i, i + 1, i + 2];\n      const decidedColor = currentColorArrangement[i];\n      const isBlank = currentColorArrangement[i] === blank;\n\n      if (rowOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n        rowOfThree.forEach(square => currentColorArrangement[square] = blank);\n        setScoreDisplay((score) => score + 3);\n        return true;\n      }\n    }\n  }\n\n  const moveIntoSquareBelow = () => {\n    for (let i = 0; i <= 55; i++) {\n      if (i < width && currentColorArrangement[i] === blank) {\n        currentColorArrangement[i] = candyColors[Math.floor(Math.random() * candyColors.length)];\n      }\n\n      if (currentColorArrangement[i + width] === blank) {\n        currentColorArrangement[i + width] = currentColorArrangement[i];\n        currentColorArrangement[i] = blank;\n      }\n    }\n  }\n\n  const createBoard = () => {\n    let randomColorArrangement = [];\n    for (let i = 0; i < width * width; i++) {\n      randomColorArrangement[i] = candyColors[Math.floor(Math.random() * candyColors.length)];\n    }\n    setCurrentColorArrangement(randomColorArrangement);\n  }\n\n  const dragStart = (e) => {\n    dragCandyMusic.play();\n    setTimeout(() => dragCandyMusic.pause(), 100);\n    setSquareBeingDraged(e.target);\n  }\n\n  const dragDrop = (e) => {\n    setSquareBeingReplaced(e.target);\n  }\n\n  const dragEnd = () => {\n    const squareBeingDragedId = parseInt(squareBeingDraged.getAttribute('data-id'));\n    const squareBeingReplacedId = parseInt(squareBeingReplaced.getAttribute('data-id'));\n\n    currentColorArrangement[squareBeingDragedId] = squareBeingReplaced.getAttribute('src');\n    currentColorArrangement[squareBeingReplacedId] = squareBeingDraged.getAttribute('src');\n    const validMoves = [\n      squareBeingDragedId - 1,\n      squareBeingDragedId + 1,\n      squareBeingDragedId - width,\n      squareBeingDragedId + width\n    ]\n    const validMove = validMoves.includes(squareBeingReplacedId);\n\n    if (squareBeingReplacedId && validMove &&\n      (checkForColumnOfFour() || checkForRowOfFour() || checkForColumnOfThree() || checkForRowOfThree())) {\n        matchCandyMusic.play();\n        setTimeout(() => matchCandyMusic.pause(), 100);\n      setSquareBeingDraged(null);\n      setSquareBeingReplaced(null);\n    }\n    else {\n      currentColorArrangement[squareBeingDragedId] = squareBeingDraged.getAttribute('src');\n      currentColorArrangement[squareBeingReplacedId] = squareBeingReplaced.getAttribute('src');\n    }\n    setCurrentColorArrangement([...currentColorArrangement]);\n  }\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      checkForColumnOfFour();\n      checkForRowOfFour();\n      checkForColumnOfThree();\n      checkForRowOfThree();\n      moveIntoSquareBelow();\n      setCurrentColorArrangement([...currentColorArrangement]);\n    }, 100)\n\n    return () => clearInterval(timer);\n  }, [checkForColumnOfFour, checkForRowOfFour, checkForColumnOfThree, checkForRowOfThree, moveIntoSquareBelow, currentColorArrangement]);\n\n  useEffect(() => {\n    createBoard();\n  }, []);\n\n  useEffect(() => {\n    gameMusic.play();\n  }, gameMusic.pause());\n  return (\n    <div className=\"app\">\n      <div className=\"game\">\n        {currentColorArrangement.map((candyColor, index) =>\n            <img\n              key={index}\n              src={candyColor}\n              data-id={index}\n              draggable={true}\n              onDragStart={dragStart}\n              onDragOver={(e) => e.preventDefault()}\n              onDragEnter={(e) => e.preventDefault()}\n              onDragLeave={(e) => e.preventDefault()}\n              onDrop={dragDrop}\n              onDragEnd={dragEnd}\n            />\n        )}\n      </div>\n      <div className=\"score\">\n        <h1>{scoreDisplay}</h1>\n        <h2>Score</h2>\n      </div>\n    </div>\n  )\n};\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}